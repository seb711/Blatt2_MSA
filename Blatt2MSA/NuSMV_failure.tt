<#@ template inherits="Safety.ProgramGraphDsl.ProgramGraphTransformation" hostspecific="true" #>
<#@ output encoding="us-ascii" extension=".smv" #>
<#@ assembly Name="Safety.ProgramGraphDsl.dll" #>

<#=  TransformToNuSMV() #>

--- only gamma until H
---! (O_FS U hazard)

DEFINE BU_POINT := 170;
DEFINE GP_POINT := 150;
DEFINE ZUGLAENGE := 5;

DEFINE Hazard := (
	v.V_Position > GP_POINT &
	v.V_Position < BU_POINT + ZUGLAENGE &
	! (v.V_pos = 3) &
	v.V_Geschwindigkeit > 0
);


DEFINE NoFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

LTLSPEC ! (NoFailures U Hazard)



-- BRAKE SHIT
DEFINE BrakeFailure := (
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

LTLSPEC ! (BrakeFailure U Hazard)

DEFINE BrakeSchrankeFailure := (
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

--- LTLSPEC !(BrakeSchrankeFailure U Hazard)

--- HodometerFailure

DEFINE HodometerFailures := (
	v.V_BremseFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

--- LTLSPEC ! (HodometerFailures U Hazard)

--- ZugFunkModul


DEFINE ZugFunkModulFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

--- LTLSPEC ! (ZugFunkModulFailures U Hazard)


--- ZugSteuerung

DEFINE ZugSteuerungFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

--- LTLSPEC ! (ZugSteuerungFailures U Hazard)


--- Bahnuebergangssteuerung

DEFINE BahnuebergangssteuerungFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

--- LTLSPEC ! (BahnuebergangssteuerungFailures U Hazard)

--- BUFunk

DEFINE BUFunkFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

--- LTLSPEC ! (BUFunkFailures U Hazard)


DEFINE SchrankeFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

LTLSPEC ! (SchrankeFailures U Hazard)

--- Schranke + Bremse see above

--- SchrankeClosedSensor

DEFINE SchrankeClosedSensorFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

--- LTLSPEC ! (SchrankeClosedSensorFailures U Hazard)


--- SchrankeOpenSensor

DEFINE SchrankeOpenSensorFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_ZugSensorFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No
);

--- LTLSPEC ! (SchrankeOpenSensorFailures U Hazard)


--- ZugSensorFailure

DEFINE ZugSensorFailures := (
	v.V_BremseFailure = L_No &
	v.V_HodometerFailure = L_No &
	v.V_ZugfunkmodulFailure = L_No &
	v.V_ZugsteuerungFailure = L_No &
	v.V_BahnuebergangssteuerungFailure = L_No &
	v.V_BUFunkFailure = L_No &
	v.V_SchrankeFailure = L_No &
	v.V_SchrankeClosedSensorFailure = L_No &
	v.V_SchrankeOpenSensorFailure = L_No
);

--- LTLSPEC ! (ZugSensorFailures U Hazard)